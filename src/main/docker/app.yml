# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  space-app:
    image: amarotta/spaceapi
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
      - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
      - SPRING_DATASOURCE_URL=jdbc:mysql://space-mysql:3306/space?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://space-mysql:3306/space?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
      - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
      - SPRING_DATASOURCE_PASSWORD=
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:8081:8081
    restart: unless-stopped
  space-mysql:
    image: mysql:8.0.27
    # volumes:
    #   - ~/volumes/jhipster/space/mysql/:/var/lib/mysql/
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=space
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    #ports:
    #- 127.0.0.1:3306:3306
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
  jhipster-registry:
    image: jhipster/jhipster-registry:v7.1.0
    volumes:
      - ./central-server-config:/central-config
    # When run with the "dev" Spring profile, the JHipster Registry will
    # read the config from the local filesystem (central-server-config directory)
    # When run with the "prod" Spring profile, it will read the configuration from a Git repository
    # See https://www.jhipster.tech/jhipster-registry/#spring-cloud-config
    environment:
      - JHIPSTER_SLEEP=20
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,api-docs
      - SPRING_SECURITY_USER_PASSWORD=admin
      - JHIPSTER_REGISTRY_PASSWORD=admin
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config/localhost-config/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 127.0.0.1:8761:8761
    restart: unless-stopped

  elk:
    image: sebp/elk
    restart: unless-stopped
    ports:
      - '5601:5601'
      - '9200:9200'
      - '5044:5044'
    networks:
      - elkf-netwok
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true

  filebeat:
    image: store/elastic/filebeat:7.15.0
    # https://github.com/docker/swarmkit/issues/1951
    # Need to override user so we can access the log files, and docker.sock
    user: root
    networks:
      - elkf-netwok
    volumes:
      - C:\Users\amaro\Documents\Ing Software Aplicada\Trabajo final\SpaceApi\filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
    # disable strict permission checks
    command: ['--strict.perms=false']

networks:
  elkf-netwok:
    driver: 'bridge'
